generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(cuid())
  username     String @unique
  passwordHash String
  displayName  String
  description  String @default("")

  followers User[]     @relation(name: "Following")
  following User[]     @relation(name: "Following")
  metaPosts MetaPost[] @relation(name: "UserMetaPosts")
  posts     Post[]     @relation(name: "UserPosts")
  reposts   Repost[]
  stars     Star[]
}

model MetaPost {
  isRepost  Boolean
  timestamp DateTime @default(now())

  user   User   @relation(name: "UserMetaPosts", fields: [userId], references: [id])
  userId String
  post   Post   @relation(name: "PostMetaPosts", fields: [postId], references: [id])
  postId String

  @@id([isRepost, userId, postId])
}

model Post {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())
  text      String
  deleted   Boolean  @default(false)

  author       User       @relation(name: "UserPosts", fields: [authorId], references: [id])
  authorId     String
  metaPosts    MetaPost[] @relation(name: "PostMetaPosts")
  replyingTo   Post?      @relation(name: "PostReplies", fields: [replyingToId], references: [id])
  replyingToId String?
  replies      Post[]     @relation(name: "PostReplies")
  reposts      Repost[]
  stars        Star[]
}

model Repost {
  timestamp DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@id([userId, postId])
}

model Star {
  timestamp DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@id([userId, postId])
}
